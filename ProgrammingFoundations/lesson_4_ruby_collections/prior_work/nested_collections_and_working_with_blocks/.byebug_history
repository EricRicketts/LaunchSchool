exit
hsh.values.flatten
hsh.values
hsh
values
values.flatten
hsh.values
hsh
values
hsh
result
c
values.flatten.all?(&:even?)
values
exit
arr.all?(&:even?)
arr
c
arr.all?(&:even?)
arr
exit
result
c
result
c
result
exit
[*colors, size]
[colors, size]
size
colors
size = block_hsh[:size].upcase
size
colors
block_hsh[:size].upcase
colors = block_hsh[:colors].map { |color| color.capitalize }
colors = block_hsh[:colors]
block_hsh
exit
array_of_hashes
h
c
result
c
result
c
result
c
exit
new_hash
c
new_hash
exit
hsh
hsh.keys {|key| hsh[key] += 1}
hsh.keys
hsh.values
hsh
exit
c
exit
sub_array.map {|elem|  elem }
sub_array.map {|elem| puts elem; elem }
sub_array.map do |elem|
sub_array.map {|elem| puts elem; puts -elem; elem }
sub_array.map {|elem| -elem }
sub_array.sort_by {|elem| '-' + elem}
sub_array.sort_by {|elem| elem}
sub_array.sort_by {|elem| -elem}
sub_array
